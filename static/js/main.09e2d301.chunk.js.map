{"version":3,"sources":["constants/colors.js","constants/types.js","utils/analizer.js","FileInput.js","App.js","serviceWorker.js","index.js"],"names":["colors","1","2","3","4","types","analizer","score","Promise","resolve","parser","xml2js","Parser","builder","Builder","parseString","err","result","part","forEach","measure","level","getLevel","note","$","color","xml","buildObject","graceLevel","getGraceCount","Math","min","trillsLevel","getTrillsCount","tupletsLevel","getTupletCount","chordsLevel","getUniqueChordsLevel","tempLevel","getTempLevel","ceil","count","notations","tuplet","filter","undefined","grace","slash","slur","type","length","ornaments","getNoteName","pitch","step","octave","alter","chords","currentChord","i","chord","push","uniqueChords","v","a","indexOf","hardness","split","allTemps","getPercentage","FileInput","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","selectSampleOnChange","str","state","openSheetMusicDisplay","load","then","render","e","errorLoadingOrRenderingSheet","loadingOrRenderingString","errorString","stack","console","warn","uploadFile","event","file","target","files","reader","FileReader","filename","name","onload","res","text","toLowerCase","analyze","analizedScore","catch","readAsText","readAsBinaryString","alert","inherits","createClass","key","value","_this2","canvas","document","createElement","setState","OpenSheetMusicDisplay","autoResize","backend","coloringEnabled","setLogLevel","body","appendChild","react_default","onChange","Component","App","className","FileInput_FileInput","Boolean","window","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0UAAeA,EAAA,CACXC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,WCJQC,EACR,QADQA,EAER,OAFQA,EAIR,SAJQA,EAKP,OALOA,EAMP,OANOA,EAOP,KCHOC,EAAA,SAACC,GAAD,OAAW,IAAIC,QAAQ,SAACC,GACnC,IAAIC,EAAS,IAAIC,IAAOC,OACpBC,EAAU,IAAIF,IAAOG,QAEzBJ,EAAOK,YAAYR,EAAO,SAAUS,EAAKC,GACrCA,EAAO,kBAAkBC,KAAKC,QAAQ,SAACD,GACnCA,EAAKE,QAAQD,QAAQ,SAACC,GAClB,IAAMC,EAAQC,EAASF,GAEvBA,EAAQG,KAAKJ,QAAQ,SAACI,GAClBA,EAAKC,EAAID,EAAKC,GAAK,GACnBD,EAAKC,EAAEC,MAAQzB,EAAOqB,SAIlC,IAAIK,EAAMb,EAAQc,YAAYV,GAC9BR,EAAQiB,QAIHJ,EAAW,SAACF,GACrB,IAAMQ,EAAaC,EAAcT,GAAW,EAAIU,KAAKC,IAAI,EAA6B,EAAzBF,EAAcT,GAAc,IAAM,EACzFY,EAAcC,EAAeb,GAAW,EAAIU,KAAKC,IAAI,EAA8B,EAA1BE,EAAeb,GAAc,IAAM,EAC5Fc,EAAeC,EAAef,GAAW,EAAIU,KAAKC,IAAI,EAA8B,EAA1BI,EAAef,GAAc,IAAM,EAC7FgB,EAAcC,EAAqBjB,GACnCkB,EAAYC,EAAanB,GAE/B,OAAOU,KAAKC,IACRD,KAAKU,MAAMZ,EAAaI,EAAcE,EAAeE,EAAcE,GAAa,IAChF,IACC,GAGIH,EAAiB,SAACf,GAC3B,IAAIqB,EAAQ,EAMZ,OALArB,EAAQG,KAAKJ,QAAQ,SAACI,GACdA,EAAKmB,WAAanB,EAAKmB,UAAU,IAAMnB,EAAKmB,UAAU,GAAGC,UACvDF,IAGHX,KAAKU,KAAKC,EAAQ,IAGhBZ,EAAgB,SAACT,GAAD,OAAaA,EAAQG,KAC7CqB,OAAO,SAACrB,GAAD,YACWsB,IAAftB,EAAKuB,QAEAvB,EAAKuB,MAAM,IAAMvB,EAAKuB,MAAM,IAAMvB,EAAKuB,MAAM,GAAGtB,GAAKD,EAAKuB,MAAM,GAAGtB,EAAEuB,OAElExB,EAAKmB,WAAanB,EAAKmB,UAAU,IAC9BnB,EAAKmB,UAAU,GAAGM,MAAQzB,EAAKmB,UAAU,GAAGM,KAAK,IACjDzB,EAAKmB,UAAU,GAAGM,KAAK,GAAGxB,GAA0C,UAArCD,EAAKmB,UAAU,GAAGM,KAAK,GAAGxB,EAAEyB,QAIzEC,QAEQjB,EAAiB,SAACb,GAAD,OAAaA,EAAQG,KAC9CqB,OAAO,SAACrB,GAAD,OACJA,EAAKmB,WAAanB,EAAKmB,UAAU,IAC9BnB,EAAKmB,UAAU,GAAGS,WAAa5B,EAAKmB,UAAU,GAAGS,UAAU,SACVN,IAAjDtB,EAAKmB,UAAU,GAAGS,UAAU,GAAG,gBACrCD,QAEQE,EAAc,SAAC7B,GACxB,GAAIA,EAAK8B,MAAO,CACZ,IAAMA,EAAQ9B,EAAK8B,MAAM,GAIzB,OAHaA,EAAMC,KAAOD,EAAMC,KAAK,GAAK,KAC3BD,EAAME,OAASF,EAAME,OAAO,GAAK,KAClCF,EAAMG,MAAQH,EAAMG,MAAM,GAAK,IAGjD,MAAO,IAGEnB,EAAuB,SAACjB,GACjC,IAAMqC,EAAS,GACXC,EAAe,GACnBtC,EAAQG,KAAKJ,QAAQ,SAACI,EAAMoC,GACH,KAAjBD,EACInC,EAAKqC,OAASD,EAAI,IAClBD,EAAeN,EAAYhC,EAAQG,KAAKoC,EAAI,IAAM,IAAOP,EAAY7B,IAGrEA,EAAKqC,MACLF,GAAgB,IAAMN,EAAY7B,GAEb,KAAjBmC,IACAD,EAAOI,KAAKH,GACZA,EAAe,MAK/B,IAAMI,EAAeL,EAAOb,OAAO,SAACmB,EAAGJ,EAAGK,GAAP,OAAaA,EAAEC,QAAQF,KAAOJ,IACjE,GAA4B,IAAxBG,EAAaZ,OACb,OAAO,EAEX,IAAMgB,EACFpC,KAAKC,IAA0E,EAAtE+B,EAAalB,OAAO,SAACgB,GAAD,OAAWA,EAAMO,MAAM,KAAKjB,QAAU,IAAGA,OAAY,GAChFpB,KAAKC,IAA0E,EAAtE+B,EAAalB,OAAO,SAACgB,GAAD,OAAWA,EAAMO,MAAM,KAAKjB,QAAU,IAAGA,OAAY,IAExF,OAAOpB,KAAKC,IAA0B,EAAtB+B,EAAaZ,OAAY,IAAMgB,GAGtC3B,EAAe,SAACnB,GACzB,IAAMgD,EAAW,GACXC,EAAgB,SAACpB,GAAD,OAAUmB,EAASnB,GAAQ7B,EAAQG,KAAK2B,OAAS,KASvE,GAPA9B,EAAQG,KAAKJ,QAAQ,SAACI,GACd6C,EAAS7C,EAAK0B,QACZmB,EAAS7C,EAAK0B,MAEhBmB,EAAS7C,EAAK0B,MAAQ,IAG1BmB,EAAS/D,IAAgBgE,EAAchE,IAAgB,GACvD,OAAO,GAEX,IAAIgB,EAAQ,EA0BZ,OAzBIgD,EAAchE,GAAe,GAAKgE,EAAchE,GAAe,KAC/DgB,GAAS,IAETgD,EAAchE,IAAgB,KAC9BgB,GAAS,GAETgD,EAAchE,GAAe,GAAKgE,EAAchE,GAAe,KAC/DgB,GAAS,GAETgD,EAAchE,IAAe,KAC7BgB,GAAS,GAETgD,EAAchE,GAAc,GAAKgE,EAAchE,GAAc,KAC7DgB,GAAS,GAETgD,EAAchE,IAAe,KAC7BgB,GAAS,GAETgD,EAAchE,GAAc,GAAKgE,EAAchE,GAAc,KAC7DgB,GAAS,GAETgD,EAAchE,GAAc,IAC5BgB,GAAS,GAGgB,EAAtBS,KAAKC,IAAIV,EAAO,KCjJdiD,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAA5B,OAAA6B,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAE,MAAAJ,EAAAE,OAAAS,EAAA,EAAAT,CAAAJ,IAAAc,KAAAC,MAAAb,EAAA,CAAAI,MAAAU,OAAAP,MAgBIQ,qBAAuB,SAACC,GACpBf,EAAKgB,MAAMC,sBAAsBC,KAAKH,GAAKI,KACvC,kBAAMnB,EAAKgB,MAAMC,sBAAsBG,UACvC,SAACC,GAAD,OAAOrB,EAAKsB,6BAA6BD,EAAG,gBAnBxDrB,EAuBIsB,6BAA+B,SAACD,EAAGE,GAC/B,IAAIC,EAAc,SAAWD,EAA2B,WAAaF,EACrEG,GAAe,kBAAoBH,EAAEI,MACrCC,QAAQC,KAAKH,IA1BrBxB,EA6BI4B,WAAa,SAACC,GACV,IAAIC,EAAOD,EAAME,OAAOC,MAAM,GACxBC,EAAS,IAAIC,WACbC,EAAWL,EAAKM,KAEtBH,EAAOI,OAAS,SAACC,GACbtC,EAAKc,qBAAqBwB,EAAIP,OAAOvF,QACrC,IAAM+F,EAAOD,EAAIP,OAAOvF,OAEpB2F,EAASK,cAAchD,QAAQ,aAAe,GAAK2C,EAASK,cAAchD,QAAQ,QAAU,EAC5FiD,EAAQF,GAAMpB,KAAK,SAACuB,GAChB1C,EAAKc,qBAAqB4B,KAC3BC,MAAM,SAACtB,GACNK,QAAQC,KAAK,8BAGjBD,QAAQC,KAAK,qEAIjBQ,EAASK,cAAchD,QAAQ,QAAU,GACtC2C,EAASK,cAAchD,QAAQ,aAAe,EACjDyC,EAAOW,WAAWd,GACXK,EAASK,cAAchD,QAAQ,QAAU,EAChDyC,EAAOY,mBAAmBf,GAE1BgB,MAAM,uCAvDlB9C,EAAA,OAAAC,OAAA8C,EAAA,EAAA9C,CAAAJ,EAAAC,GAAAG,OAAA+C,EAAA,EAAA/C,CAAAJ,EAAA,EAAAoD,IAAA,oBAAAC,MAAA,WACwB,IAAAC,EAAAhD,KACViD,EAASC,SAASC,cAAc,OACtCnD,KAAKoD,SAAS,CACVH,SACAnC,sBAAuB,IAAIuC,wBAAsBJ,EAAQ,CACrDK,YAAY,EACZC,QAAS,SACTC,iBAAiB,KAEtB,WACCR,EAAKnC,MAAMC,sBAAsB2C,YAAY,UAEjDP,SAASQ,KAAKC,YAAYV,KAblC,CAAAH,IAAA,SAAAC,MAAA,WA4DQ,OACIa,EAAAxE,EAAA+D,cAAA,YACIS,EAAAxE,EAAA+D,cAAA,SAAO9E,KAAK,OAAO4D,KAAK,SAAS4B,SAAU7D,KAAKyB,kBA9DhE/B,EAAA,CAA+BoE,aCUhBC,mLARX,OACEH,EAAAxE,EAAA+D,cAAA,OAAKa,UAAU,OACXJ,EAAAxE,EAAA+D,cAACc,EAAD,cAJQH,aCQEI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAStD,OAAO2C,EAAAxE,EAAA+D,cAACqB,EAAD,MAAStB,SAASuB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5D,KAAK,SAAA6D,GACjCA,EAAaC","file":"static/js/main.09e2d301.chunk.js","sourcesContent":["export default {\n    1: \"#66CC66\",\n    2: \"#3366FF\",\n    3: \"#CC0000\",\n    4: \"#330000\",\n}\n","export default {\n    1: 'whole',\n    2: 'half',\n    4: 'quarter',\n    8: 'eighth',\n    16: '16th',\n    32: '32nd',\n    64: 'th',\n}\n","import xml2js from 'xml2js';\nimport colors from '../constants/colors';\nimport types from '../constants/types';\n\nexport default (score) => new Promise((resolve) => {\n    let parser = new xml2js.Parser();\n    let builder = new xml2js.Builder();\n\n    parser.parseString(score, function (err, result) {\n        result['score-partwise'].part.forEach((part) => {\n            part.measure.forEach((measure) => {\n                const level = getLevel(measure);\n\n                measure.note.forEach((note) => {\n                    note.$ = note.$ || {};\n                    note.$.color = colors[level];\n                });\n            });\n        });\n        let xml = builder.buildObject(result);\n        resolve(xml);\n    });\n});\n\nexport const getLevel = (measure) => {\n    const graceLevel = getGraceCount(measure) > 0 ? Math.min(7 + getGraceCount(measure) * 5, 20) : 0;\n    const trillsLevel = getTrillsCount(measure) > 0 ? Math.min(7 + getTrillsCount(measure) * 5, 15) : 0;\n    const tupletsLevel = getTupletCount(measure) > 0 ? Math.min(7 + getTupletCount(measure) * 5, 15) : 0;\n    const chordsLevel = getUniqueChordsLevel(measure);\n    const tempLevel = getTempLevel(measure);\n\n    return Math.min(\n        Math.ceil((graceLevel + trillsLevel + tupletsLevel + chordsLevel + tempLevel) / 16),\n        4\n    ) || 1;\n};\n\nexport const getTupletCount = (measure) => {\n    let count = 0;\n    measure.note.forEach((note) => {\n        if (note.notations && note.notations[0] && note.notations[0].tuplet) {\n            ++count;\n        }\n    });\n    return Math.ceil(count / 2);\n};\n\nexport const getGraceCount = (measure) => measure.note\n    .filter((note) =>\n        note.grace !== undefined\n        && (\n            (note.grace[0] && note.grace[0] && note.grace[0].$ && note.grace[0].$.slash)\n            || (\n                note.notations && note.notations[0]\n                && note.notations[0].slur && note.notations[0].slur[0]\n                && note.notations[0].slur[0].$ && note.notations[0].slur[0].$.type === 'start'\n            )\n        )\n    )\n    .length;\n\nexport const getTrillsCount = (measure) => measure.note\n    .filter((note) =>\n        note.notations && note.notations[0]\n        && note.notations[0].ornaments && note.notations[0].ornaments[0]\n        && note.notations[0].ornaments[0]['trill-mark'] !== undefined)\n    .length;\n\nexport const getNoteName = (note) => {\n    if (note.pitch) {\n        const pitch = note.pitch[0];\n        const step = pitch.step ? pitch.step[0] : '';\n        const octave = pitch.octave ? pitch.octave[0] : '';\n        const alter = pitch.alter ? pitch.alter[0] : '';\n        return step + octave + alter;\n    }\n    return '';\n};\n\nexport const getUniqueChordsLevel = (measure) => {\n    const chords = [];\n    let currentChord = '';\n    measure.note.forEach((note, i) => {\n        if (currentChord === '') {\n            if (note.chord && i > 0) {\n                currentChord = getNoteName(measure.note[i - 1]) + ' ' +  getNoteName(note);\n            }\n        } else {\n            if (note.chord) {\n                currentChord += ' ' + getNoteName(note);\n            } else {\n                if (currentChord !== '') {\n                    chords.push(currentChord);\n                    currentChord = '';\n                }\n            }\n        }\n    });\n    const uniqueChords = chords.filter((v, i, a) => a.indexOf(v) === i);\n    if (uniqueChords.length === 0) {\n        return 0;\n    }\n    const hardness =\n        Math.min(uniqueChords.filter((chord) => chord.split(' ').length >= 4).length * 3, 6)\n        + Math.min(uniqueChords.filter((chord) => chord.split(' ').length >= 5).length * 5, 10);\n\n    return Math.min(uniqueChords.length * 3, 10) + hardness;\n};\n\nexport const getTempLevel = (measure) => {\n    const allTemps = {};\n    const getPercentage = (type) => allTemps[type] / measure.note.length * 100;\n\n    measure.note.forEach((note) => {\n        if (allTemps[note.type]) {\n            ++allTemps[note.type]\n        } else {\n            allTemps[note.type] = 1;\n        }\n    });\n    if (allTemps[types[\"64\"]] || getPercentage(types[\"32\"]) >= 30) {\n        return 20;\n    }\n    let level = 0;\n    if (getPercentage(types[\"32\"]) > 0 && getPercentage(types[\"32\"]) < 30) {\n        level += 10;\n    }\n    if (getPercentage(types[\"16\"]) >= 30) {\n        level += 8;\n    }\n    if (getPercentage(types[\"16\"]) > 0 && getPercentage(types[\"16\"]) < 30) {\n        level += 5;\n    }\n    if (getPercentage(types[\"8\"]) >= 30) {\n        level += 5;\n    }\n    if (getPercentage(types[\"8\"]) > 0 && getPercentage(types[\"8\"]) < 30) {\n        level += 2;\n    }\n    if (getPercentage(types[\"2\"]) >= 30) {\n        level -= 5;\n    }\n    if (getPercentage(types[\"2\"]) > 0 && getPercentage(types[\"2\"]) < 30) {\n        level -= 3;\n    }\n    if (getPercentage(types[\"1\"]) > 0) {\n        level -= 5;\n    }\n\n    return Math.min(level, 20) * 2;\n};\n","import React, {Component} from 'react';\nimport {OpenSheetMusicDisplay} from 'opensheetmusicdisplay';\nimport analyze from './utils/analizer';\n\nexport class FileInput extends Component {\n    componentDidMount() {\n        const canvas = document.createElement(\"div\");\n        this.setState({\n            canvas,\n            openSheetMusicDisplay: new OpenSheetMusicDisplay(canvas, {\n                autoResize: true,\n                backend: 'canvas',\n                coloringEnabled: true\n            })\n        }, () => {\n            this.state.openSheetMusicDisplay.setLogLevel('info');\n        });\n        document.body.appendChild(canvas);\n    }\n\n    selectSampleOnChange = (str) => {\n        this.state.openSheetMusicDisplay.load(str).then(\n            () => this.state.openSheetMusicDisplay.render(),\n            (e) => this.errorLoadingOrRenderingSheet(e, \"rendering\")\n        );\n    };\n\n    errorLoadingOrRenderingSheet = (e, loadingOrRenderingString) => {\n        let errorString = \"Error \" + loadingOrRenderingString + \" sheet: \" + e;\n        errorString += \"\\nStackTrace:\\n\" + e.stack;\n        console.warn(errorString);\n    };\n\n    uploadFile = (event) => {\n        let file = event.target.files[0];\n        const reader = new FileReader();\n        const filename = file.name;\n\n        reader.onload = (res) => {\n            this.selectSampleOnChange(res.target.result);\n            const text = res.target.result;\n\n            if (filename.toLowerCase().indexOf(\".musicxml\") > 0 || filename.toLowerCase().indexOf(\".xml\") > 0) {\n                analyze(text).then((analizedScore) => {\n                    this.selectSampleOnChange(analizedScore);\n                }).catch((e) => {\n                    console.warn(\"Can't analize this file.\");\n                });\n            } else {\n                console.warn(\"Can't analize this type of file. Please upload .musicxml or .xml\");\n            }\n        };\n\n        if (filename.toLowerCase().indexOf(\".xml\") > 0\n            || filename.toLowerCase().indexOf(\".musicxml\") > 0) {\n            reader.readAsText(file);\n        } else if (filename.toLowerCase().indexOf(\".mxl\") > 0) {\n            reader.readAsBinaryString(file);\n        } else {\n            alert(\"No vaild .xml/.mxl/.musicxml file!\");\n        }\n    };\n\n    render() {\n        return (\n            <span>\n                <input type=\"file\" name=\"myFile\" onChange={this.uploadFile}/>\n            </span>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport {FileInput} from \"./FileInput\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <FileInput />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}